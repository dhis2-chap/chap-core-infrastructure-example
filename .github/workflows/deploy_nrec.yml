# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  repository_dispatch:

  push:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  resetInstance:
    name: Reset CHAP core instance on NREC
    runs-on: ubuntu-latest
    steps:
        #Install OpenStack CLI
      - name: Install OpenStack CLI
        run: |
          sudo apt-get update
          sudo snap install openstackclients
          sudo apt  install python3-openstackclient
        shell: bash
        #This rebuilds the instance using OpenStack CLI
      - name: Rebuild CHAP instance
        run: |
          export OS_USERNAME=${{ secrets.OPENSTACK_USERNAME }}
          export OS_PROJECT_NAME=${{ secrets.OPENSTACK_PROJECT_NAME }}
          export OS_PASSWORD=${{ secrets.OPENSTACK_PASSWORD }}
          export OS_AUTH_URL=https://api.nrec.no:5000/v3
          export OS_IDENTITY_API_VERSION=3
          export OS_USER_DOMAIN_NAME=dataporten
          export OS_PROJECT_DOMAIN_NAME=dataporten
          export OS_REGION_NAME=osl
          export OS_INTERFACE=public
          export OS_NO_CACHE=1
          
          openstack server rebuild --wait --image 97397a31-2517-4eb8-b66f-1d50c00dbb77 chap
        shell: bash
      
  deployChap:
    needs: resetInstance
    name: Deploy CHAP core to instance on NREC
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # This was added due to this error: https://stackoverflow.com/questions/20840012/ssh-remote-host-identification-has-changed
    #  - name: Remove all keys belonging to hostname from a known_hosts file
    #    run: |
    #      ssh-keygen -R ${{ secrets.HOST }} || true
    #    shell: bash
    #  - name: Clone CHAP Core repo
    #    run: |
    #      git clone https://github.com/dhis2-chap/chap-core-infrastructure-example.git infrastructure
    #    shell: bash
    #  # Runs a single command using the runners shell
    #  - name: Write the SSH key to a file on GitHub Actions
    #    run: | 
    #        set -e
    #        mkdir -p ~/.ssh
    #        ssh_key="${{ secrets.SSH_PRIVATE_KEY }}"
    #        echo "${ssh_key}" > ~/.ssh/id_rsa
    #        chmod 600 ~/.ssh/id_rsa

    #    shell: bash
    #  - name: Scan host keys for host
    #    run: |
    #        host="${{ secrets.HOST }}"
    #        for i in {1..5}; do
    #          echo "Attempting to scan host keys for ${host}, try #${i}"
    #          ssh-keyscan -T 10 -H "${host}" >> ~/.ssh/known_hosts 2>&1 && break
    #          echo "Scan failed, retrying after 5s"
    #          sleep 5
    #        done || {
    #          echo "Failed to scan host keys for ${host} after 5 attempts"
    #          exit 1
    #        }
    #    shell: bash
      - name: multiple command
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir test
#            scp -i ~/.ssh/id_rsa -r infrastructure/ ${{ secrets.SSH_USERNAME }}:/home/ubuntu/chap-core

      - name: Copy files to remote server
        run: |
          scp -i ~/.ssh/id_rsa -r infrastructure/ ${{ secrets.SSH_USERNAME }}:/home/ubuntu/chap-core
        shell: bash
        # Step to change permissions on the remote server
      - name: Change directory permissions on remote server
        run: |
          sleep 4
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USERNAME }} "sudo chmod -R 775 /home/ubuntu/chap-core"
        shell: bash
      - name: Set environment variables and run commands on remote server
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USERNAME }} "
            export GOOGLE_SERVICE_ACCOUNT_EMAIL=\"${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}\"
            export GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY=\"${{ secrets.GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY }}\"
            export FOR_TESTING="TRUE"
            bash /home/ubuntu/chap-core/init.sh
          "
        shell: bash
  varifyChap:
    needs: deployChap
    name: Verify CHAP core on NREC
    runs-on: ubuntu-latest
    steps:
      - name: Verify CHAP core
        run: |
          curl -s -o /dev/null -w "200" http://"${{ secrets.HOST }}"/docs
        shell: bash




